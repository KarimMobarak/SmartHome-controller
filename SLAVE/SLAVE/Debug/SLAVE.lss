
SLAVE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000384  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000003f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  000003f8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003f8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000428  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000464  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000dd2  00000000  00000000  00000544  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008cc  00000000  00000000  00001316  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005e3  00000000  00000000  00001be2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c8  00000000  00000000  000021c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000043a  00000000  00000000  00002390  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005f6  00000000  00000000  000027ca  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  00002dc0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3e 01 	jmp	0x27c	; 0x27c <__vector_12>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 37 01 	call	0x26e	; 0x26e <main>
  74:	0c 94 c0 01 	jmp	0x380	; 0x380 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <pin_config>:
 * [Out]           NONE
 *
 * [Returns]:      NONE
 *******************************************************************************/
void pin_config (Uint8 port, Uint8 pin, Uint8 direction){
	switch (direction)
  7c:	44 23       	and	r20, r20
  7e:	d9 f1       	breq	.+118    	; 0xf6 <pin_config+0x7a>
  80:	41 30       	cpi	r20, 0x01	; 1
  82:	09 f0       	breq	.+2      	; 0x86 <pin_config+0xa>
  84:	6b c0       	rjmp	.+214    	; 0x15c <pin_config+0xe0>
	{
		case DIO_INPUT:
		switch (port)
  86:	81 30       	cpi	r24, 0x01	; 1
  88:	91 f0       	breq	.+36     	; 0xae <pin_config+0x32>
  8a:	28 f0       	brcs	.+10     	; 0x96 <pin_config+0x1a>
  8c:	82 30       	cpi	r24, 0x02	; 2
  8e:	d9 f0       	breq	.+54     	; 0xc6 <pin_config+0x4a>
  90:	83 30       	cpi	r24, 0x03	; 3
  92:	29 f1       	breq	.+74     	; 0xde <pin_config+0x62>
  94:	08 95       	ret
		{
			case DIO_PORTA:
			CLR_BIT(DDRA,pin);
  96:	2a b3       	in	r18, 0x1a	; 26
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	02 c0       	rjmp	.+4      	; 0xa2 <pin_config+0x26>
  9e:	88 0f       	add	r24, r24
  a0:	99 1f       	adc	r25, r25
  a2:	6a 95       	dec	r22
  a4:	e2 f7       	brpl	.-8      	; 0x9e <pin_config+0x22>
  a6:	80 95       	com	r24
  a8:	82 23       	and	r24, r18
  aa:	8a bb       	out	0x1a, r24	; 26
			break;
  ac:	08 95       	ret
			case DIO_PORTB:
			CLR_BIT(DDRB,pin);
  ae:	27 b3       	in	r18, 0x17	; 23
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	02 c0       	rjmp	.+4      	; 0xba <pin_config+0x3e>
  b6:	88 0f       	add	r24, r24
  b8:	99 1f       	adc	r25, r25
  ba:	6a 95       	dec	r22
  bc:	e2 f7       	brpl	.-8      	; 0xb6 <pin_config+0x3a>
  be:	80 95       	com	r24
  c0:	82 23       	and	r24, r18
  c2:	87 bb       	out	0x17, r24	; 23
			break;
  c4:	08 95       	ret
			case DIO_PORTC:
			CLR_BIT(DDRC,pin);
  c6:	24 b3       	in	r18, 0x14	; 20
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	02 c0       	rjmp	.+4      	; 0xd2 <pin_config+0x56>
  ce:	88 0f       	add	r24, r24
  d0:	99 1f       	adc	r25, r25
  d2:	6a 95       	dec	r22
  d4:	e2 f7       	brpl	.-8      	; 0xce <pin_config+0x52>
  d6:	80 95       	com	r24
  d8:	82 23       	and	r24, r18
  da:	84 bb       	out	0x14, r24	; 20
			break;
  dc:	08 95       	ret
			case DIO_PORTD:
			CLR_BIT(DDRD,pin);
  de:	21 b3       	in	r18, 0x11	; 17
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <pin_config+0x6e>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <pin_config+0x6a>
  ee:	80 95       	com	r24
  f0:	82 23       	and	r24, r18
  f2:	81 bb       	out	0x11, r24	; 17
			break;
  f4:	08 95       	ret
		}
		break;
		case DIO_OUTPUT:
		switch (port)
  f6:	81 30       	cpi	r24, 0x01	; 1
  f8:	89 f0       	breq	.+34     	; 0x11c <pin_config+0xa0>
  fa:	28 f0       	brcs	.+10     	; 0x106 <pin_config+0x8a>
  fc:	82 30       	cpi	r24, 0x02	; 2
  fe:	c9 f0       	breq	.+50     	; 0x132 <pin_config+0xb6>
 100:	83 30       	cpi	r24, 0x03	; 3
 102:	11 f1       	breq	.+68     	; 0x148 <pin_config+0xcc>
 104:	08 95       	ret
		{
			case DIO_PORTA:
			SET_BIT(DDRA,pin);
 106:	2a b3       	in	r18, 0x1a	; 26
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	02 c0       	rjmp	.+4      	; 0x112 <pin_config+0x96>
 10e:	88 0f       	add	r24, r24
 110:	99 1f       	adc	r25, r25
 112:	6a 95       	dec	r22
 114:	e2 f7       	brpl	.-8      	; 0x10e <pin_config+0x92>
 116:	82 2b       	or	r24, r18
 118:	8a bb       	out	0x1a, r24	; 26
			break;
 11a:	08 95       	ret
			case DIO_PORTB:
			SET_BIT(DDRB,pin);
 11c:	27 b3       	in	r18, 0x17	; 23
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	02 c0       	rjmp	.+4      	; 0x128 <pin_config+0xac>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	6a 95       	dec	r22
 12a:	e2 f7       	brpl	.-8      	; 0x124 <pin_config+0xa8>
 12c:	82 2b       	or	r24, r18
 12e:	87 bb       	out	0x17, r24	; 23
			break;
 130:	08 95       	ret
			case DIO_PORTC:
			SET_BIT(DDRC,pin);
 132:	24 b3       	in	r18, 0x14	; 20
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	02 c0       	rjmp	.+4      	; 0x13e <pin_config+0xc2>
 13a:	88 0f       	add	r24, r24
 13c:	99 1f       	adc	r25, r25
 13e:	6a 95       	dec	r22
 140:	e2 f7       	brpl	.-8      	; 0x13a <pin_config+0xbe>
 142:	82 2b       	or	r24, r18
 144:	84 bb       	out	0x14, r24	; 20
			break;
 146:	08 95       	ret
			case DIO_PORTD:
			SET_BIT(DDRD,pin);
 148:	21 b3       	in	r18, 0x11	; 17
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	02 c0       	rjmp	.+4      	; 0x154 <pin_config+0xd8>
 150:	88 0f       	add	r24, r24
 152:	99 1f       	adc	r25, r25
 154:	6a 95       	dec	r22
 156:	e2 f7       	brpl	.-8      	; 0x150 <pin_config+0xd4>
 158:	82 2b       	or	r24, r18
 15a:	81 bb       	out	0x11, r24	; 17
 15c:	08 95       	ret

0000015e <pin_value>:
 *
 * [Returns]:      NONE
 *******************************************************************************/

void pin_value(Uint8 port, Uint8 pin, state value){
	switch (value)
 15e:	44 23       	and	r20, r20
 160:	19 f0       	breq	.+6      	; 0x168 <pin_value+0xa>
 162:	41 30       	cpi	r20, 0x01	; 1
 164:	c9 f1       	breq	.+114    	; 0x1d8 <pin_value+0x7a>
 166:	08 95       	ret
	{
		case LOW:
		switch(port)
 168:	81 30       	cpi	r24, 0x01	; 1
 16a:	91 f0       	breq	.+36     	; 0x190 <pin_value+0x32>
 16c:	28 f0       	brcs	.+10     	; 0x178 <pin_value+0x1a>
 16e:	82 30       	cpi	r24, 0x02	; 2
 170:	d9 f0       	breq	.+54     	; 0x1a8 <pin_value+0x4a>
 172:	83 30       	cpi	r24, 0x03	; 3
 174:	29 f1       	breq	.+74     	; 0x1c0 <pin_value+0x62>
 176:	08 95       	ret
		{
			case DIO_PORTA:
			CLR_BIT(PORTA, pin);
 178:	2b b3       	in	r18, 0x1b	; 27
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 c0       	rjmp	.+4      	; 0x184 <pin_value+0x26>
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	6a 95       	dec	r22
 186:	e2 f7       	brpl	.-8      	; 0x180 <pin_value+0x22>
 188:	80 95       	com	r24
 18a:	82 23       	and	r24, r18
 18c:	8b bb       	out	0x1b, r24	; 27
			break;
 18e:	08 95       	ret
			case DIO_PORTB:
			CLR_BIT(PORTB, pin);
 190:	28 b3       	in	r18, 0x18	; 24
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	02 c0       	rjmp	.+4      	; 0x19c <pin_value+0x3e>
 198:	88 0f       	add	r24, r24
 19a:	99 1f       	adc	r25, r25
 19c:	6a 95       	dec	r22
 19e:	e2 f7       	brpl	.-8      	; 0x198 <pin_value+0x3a>
 1a0:	80 95       	com	r24
 1a2:	82 23       	and	r24, r18
 1a4:	88 bb       	out	0x18, r24	; 24
			break;
 1a6:	08 95       	ret
			case DIO_PORTC:
			CLR_BIT(PORTC, pin);
 1a8:	25 b3       	in	r18, 0x15	; 21
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <pin_value+0x56>
 1b0:	88 0f       	add	r24, r24
 1b2:	99 1f       	adc	r25, r25
 1b4:	6a 95       	dec	r22
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <pin_value+0x52>
 1b8:	80 95       	com	r24
 1ba:	82 23       	and	r24, r18
 1bc:	85 bb       	out	0x15, r24	; 21
			break;
 1be:	08 95       	ret
			case DIO_PORTD:
			CLR_BIT(PORTD, pin);
 1c0:	22 b3       	in	r18, 0x12	; 18
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <pin_value+0x6e>
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	6a 95       	dec	r22
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <pin_value+0x6a>
 1d0:	80 95       	com	r24
 1d2:	82 23       	and	r24, r18
 1d4:	82 bb       	out	0x12, r24	; 18
			break;
 1d6:	08 95       	ret
		}
		break;
		case HIGH:
		switch(port)
 1d8:	81 30       	cpi	r24, 0x01	; 1
 1da:	89 f0       	breq	.+34     	; 0x1fe <pin_value+0xa0>
 1dc:	28 f0       	brcs	.+10     	; 0x1e8 <pin_value+0x8a>
 1de:	82 30       	cpi	r24, 0x02	; 2
 1e0:	c9 f0       	breq	.+50     	; 0x214 <pin_value+0xb6>
 1e2:	83 30       	cpi	r24, 0x03	; 3
 1e4:	11 f1       	breq	.+68     	; 0x22a <pin_value+0xcc>
 1e6:	08 95       	ret
		{
			case DIO_PORTA:
			SET_BIT(PORTA, pin);
 1e8:	2b b3       	in	r18, 0x1b	; 27
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <pin_value+0x96>
 1f0:	88 0f       	add	r24, r24
 1f2:	99 1f       	adc	r25, r25
 1f4:	6a 95       	dec	r22
 1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <pin_value+0x92>
 1f8:	82 2b       	or	r24, r18
 1fa:	8b bb       	out	0x1b, r24	; 27
			break;
 1fc:	08 95       	ret
			case DIO_PORTB:
			SET_BIT(PORTB, pin);
 1fe:	28 b3       	in	r18, 0x18	; 24
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 c0       	rjmp	.+4      	; 0x20a <pin_value+0xac>
 206:	88 0f       	add	r24, r24
 208:	99 1f       	adc	r25, r25
 20a:	6a 95       	dec	r22
 20c:	e2 f7       	brpl	.-8      	; 0x206 <pin_value+0xa8>
 20e:	82 2b       	or	r24, r18
 210:	88 bb       	out	0x18, r24	; 24
			break;
 212:	08 95       	ret
			case DIO_PORTC:
			SET_BIT(PORTC, pin);
 214:	25 b3       	in	r18, 0x15	; 21
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	02 c0       	rjmp	.+4      	; 0x220 <pin_value+0xc2>
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	6a 95       	dec	r22
 222:	e2 f7       	brpl	.-8      	; 0x21c <pin_value+0xbe>
 224:	82 2b       	or	r24, r18
 226:	85 bb       	out	0x15, r24	; 21
			break;
 228:	08 95       	ret
			case DIO_PORTD:
			SET_BIT(PORTD, pin);
 22a:	22 b3       	in	r18, 0x12	; 18
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <pin_value+0xd8>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	6a 95       	dec	r22
 238:	e2 f7       	brpl	.-8      	; 0x232 <pin_value+0xd4>
 23a:	82 2b       	or	r24, r18
 23c:	82 bb       	out	0x12, r24	; 18
 23e:	08 95       	ret

00000240 <LED_Init>:


#include "LED.h"

void LED_Init(){
	pin_config(LED_PORT,LED0_PIN,DIO_OUTPUT);
 240:	40 e0       	ldi	r20, 0x00	; 0
 242:	60 e0       	ldi	r22, 0x00	; 0
 244:	82 e0       	ldi	r24, 0x02	; 2
 246:	0e 94 3e 00 	call	0x7c	; 0x7c <pin_config>
	pin_config(LED_PORT,LED1_PIN,DIO_OUTPUT);
 24a:	40 e0       	ldi	r20, 0x00	; 0
 24c:	61 e0       	ldi	r22, 0x01	; 1
 24e:	82 e0       	ldi	r24, 0x02	; 2
 250:	0e 94 3e 00 	call	0x7c	; 0x7c <pin_config>
 254:	08 95       	ret

00000256 <LED_ON>:

}
void LED_ON(Uint8 ledPin){
	pin_value(LED_PORT,ledPin,HIGH);
 256:	41 e0       	ldi	r20, 0x01	; 1
 258:	68 2f       	mov	r22, r24
 25a:	82 e0       	ldi	r24, 0x02	; 2
 25c:	0e 94 af 00 	call	0x15e	; 0x15e <pin_value>
 260:	08 95       	ret

00000262 <LED_OFF>:
}
void LED_OFF(Uint8 ledPin){
	pin_value(LED_PORT,ledPin,LOW);
 262:	40 e0       	ldi	r20, 0x00	; 0
 264:	68 2f       	mov	r22, r24
 266:	82 e0       	ldi	r24, 0x02	; 2
 268:	0e 94 af 00 	call	0x15e	; 0x15e <pin_value>
 26c:	08 95       	ret

0000026e <main>:

volatile Uint8 operation_ID = 0 ;

int main(void)
{
	LED_Init();
 26e:	0e 94 20 01 	call	0x240	; 0x240 <LED_Init>
	SPI_init(slave,enable); //spi mode is set to slave mode and interrupt is enabled
 272:	61 e0       	ldi	r22, 0x01	; 1
 274:	80 e0       	ldi	r24, 0x00	; 0
 276:	0e 94 7f 01 	call	0x2fe	; 0x2fe <SPI_init>
 27a:	ff cf       	rjmp	.-2      	; 0x27a <main+0xc>

0000027c <__vector_12>:


	
}

ISR(SPI_STC_vect){
 27c:	1f 92       	push	r1
 27e:	0f 92       	push	r0
 280:	0f b6       	in	r0, 0x3f	; 63
 282:	0f 92       	push	r0
 284:	11 24       	eor	r1, r1
 286:	2f 93       	push	r18
 288:	3f 93       	push	r19
 28a:	4f 93       	push	r20
 28c:	5f 93       	push	r21
 28e:	6f 93       	push	r22
 290:	7f 93       	push	r23
 292:	8f 93       	push	r24
 294:	9f 93       	push	r25
 296:	af 93       	push	r26
 298:	bf 93       	push	r27
 29a:	ef 93       	push	r30
 29c:	ff 93       	push	r31
	
	
	operation_ID = SPDR;
 29e:	8f b1       	in	r24, 0x0f	; 15
 2a0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		
	switch (operation_ID)
 2a4:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 2a8:	8c 34       	cpi	r24, 0x4C	; 76
 2aa:	49 f0       	breq	.+18     	; 0x2be <__vector_12+0x42>
 2ac:	18 f4       	brcc	.+6      	; 0x2b4 <__vector_12+0x38>
 2ae:	8b 34       	cpi	r24, 0x4B	; 75
 2b0:	71 f0       	breq	.+28     	; 0x2ce <__vector_12+0x52>
 2b2:	14 c0       	rjmp	.+40     	; 0x2dc <__vector_12+0x60>
 2b4:	8b 36       	cpi	r24, 0x6B	; 107
 2b6:	79 f0       	breq	.+30     	; 0x2d6 <__vector_12+0x5a>
 2b8:	8c 36       	cpi	r24, 0x6C	; 108
 2ba:	29 f0       	breq	.+10     	; 0x2c6 <__vector_12+0x4a>
 2bc:	0f c0       	rjmp	.+30     	; 0x2dc <__vector_12+0x60>
	{
		case 'L':
		LED_ON(LIVING_ROOM_LIGHTING);
 2be:	80 e0       	ldi	r24, 0x00	; 0
 2c0:	0e 94 2b 01 	call	0x256	; 0x256 <LED_ON>
		break;
 2c4:	0b c0       	rjmp	.+22     	; 0x2dc <__vector_12+0x60>
		case 'l':
		LED_OFF(LIVING_ROOM_LIGHTING);
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	0e 94 31 01 	call	0x262	; 0x262 <LED_OFF>
		break;
 2cc:	07 c0       	rjmp	.+14     	; 0x2dc <__vector_12+0x60>
		case 'K':
		LED_ON(KITCHEN_LIGHTING);
 2ce:	81 e0       	ldi	r24, 0x01	; 1
 2d0:	0e 94 2b 01 	call	0x256	; 0x256 <LED_ON>
		break;
 2d4:	03 c0       	rjmp	.+6      	; 0x2dc <__vector_12+0x60>
		case 'k':
		LED_OFF(KITCHEN_LIGHTING);
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	0e 94 31 01 	call	0x262	; 0x262 <LED_OFF>
		break;
	}

}
 2dc:	ff 91       	pop	r31
 2de:	ef 91       	pop	r30
 2e0:	bf 91       	pop	r27
 2e2:	af 91       	pop	r26
 2e4:	9f 91       	pop	r25
 2e6:	8f 91       	pop	r24
 2e8:	7f 91       	pop	r23
 2ea:	6f 91       	pop	r22
 2ec:	5f 91       	pop	r21
 2ee:	4f 91       	pop	r20
 2f0:	3f 91       	pop	r19
 2f2:	2f 91       	pop	r18
 2f4:	0f 90       	pop	r0
 2f6:	0f be       	out	0x3f, r0	; 63
 2f8:	0f 90       	pop	r0
 2fa:	1f 90       	pop	r1
 2fc:	18 95       	reti

000002fe <SPI_init>:


void inline Master_pin_config();
void inline slave_pin_config();

void SPI_init(SPI_mode mode, SPI_interrupt_status int_status){
 2fe:	cf 93       	push	r28
 300:	c6 2f       	mov	r28, r22
	switch (mode)
 302:	88 23       	and	r24, r24
 304:	f1 f0       	breq	.+60     	; 0x342 <SPI_init+0x44>
 306:	81 30       	cpi	r24, 0x01	; 1
 308:	81 f5       	brne	.+96     	; 0x36a <SPI_init+0x6c>
}
	SET_BIT(SPCR,SPE);
}

void inline master_pin_config(){
	pin_config(SPI_PORT,MOSI_PIN, DIO_OUTPUT);
 30a:	40 e0       	ldi	r20, 0x00	; 0
 30c:	65 e0       	ldi	r22, 0x05	; 5
 30e:	0e 94 3e 00 	call	0x7c	; 0x7c <pin_config>
	pin_config(SPI_PORT,MISO_PIN,DIO_INPUT);
 312:	41 e0       	ldi	r20, 0x01	; 1
 314:	66 e0       	ldi	r22, 0x06	; 6
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	0e 94 3e 00 	call	0x7c	; 0x7c <pin_config>
	pin_config(SPI_PORT,SS_PIN,DIO_OUTPUT);
 31c:	40 e0       	ldi	r20, 0x00	; 0
 31e:	64 e0       	ldi	r22, 0x04	; 4
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	0e 94 3e 00 	call	0x7c	; 0x7c <pin_config>
	pin_config(SPI_PORT,SCK_PIN,DIO_OUTPUT);
 326:	40 e0       	ldi	r20, 0x00	; 0
 328:	67 e0       	ldi	r22, 0x07	; 7
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	0e 94 3e 00 	call	0x7c	; 0x7c <pin_config>
void SPI_init(SPI_mode mode, SPI_interrupt_status int_status){
	switch (mode)
	{
		case master:
			master_pin_config();
			SET_BIT(SPCR,MSTR); // Select master mode
 330:	8d b1       	in	r24, 0x0d	; 13
 332:	80 61       	ori	r24, 0x10	; 16
 334:	8d b9       	out	0x0d, r24	; 13
			pin_value(SPI_PORT,SS_PIN,LOW);
 336:	40 e0       	ldi	r20, 0x00	; 0
 338:	64 e0       	ldi	r22, 0x04	; 4
 33a:	81 e0       	ldi	r24, 0x01	; 1
 33c:	0e 94 af 00 	call	0x15e	; 0x15e <pin_value>
			break;
 340:	14 c0       	rjmp	.+40     	; 0x36a <SPI_init+0x6c>
	pin_config(SPI_PORT,SS_PIN,DIO_OUTPUT);
	pin_config(SPI_PORT,SCK_PIN,DIO_OUTPUT);
}

void inline slave_pin_config(){
	pin_config(SPI_PORT,MOSI_PIN, DIO_INPUT);
 342:	41 e0       	ldi	r20, 0x01	; 1
 344:	65 e0       	ldi	r22, 0x05	; 5
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	0e 94 3e 00 	call	0x7c	; 0x7c <pin_config>
	pin_config(SPI_PORT,MISO_PIN,DIO_OUTPUT);
 34c:	40 e0       	ldi	r20, 0x00	; 0
 34e:	66 e0       	ldi	r22, 0x06	; 6
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	0e 94 3e 00 	call	0x7c	; 0x7c <pin_config>
	pin_config(SPI_PORT,SS_PIN,DIO_INPUT);
 356:	41 e0       	ldi	r20, 0x01	; 1
 358:	64 e0       	ldi	r22, 0x04	; 4
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	0e 94 3e 00 	call	0x7c	; 0x7c <pin_config>
	pin_config(SPI_PORT,SCK_PIN,DIO_INPUT);
 360:	41 e0       	ldi	r20, 0x01	; 1
 362:	67 e0       	ldi	r22, 0x07	; 7
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	0e 94 3e 00 	call	0x7c	; 0x7c <pin_config>
		case slave:
			slave_pin_config();
			break;
		
	}
	if (int_status == enable)
 36a:	c1 30       	cpi	r28, 0x01	; 1
 36c:	21 f4       	brne	.+8      	; 0x376 <SPI_init+0x78>
	{
		sei(); // enable global interrupt
 36e:	78 94       	sei
		SET_BIT(SPCR,SPIE); //enable SPI interrupt
 370:	8d b1       	in	r24, 0x0d	; 13
 372:	80 68       	ori	r24, 0x80	; 128
 374:	8d b9       	out	0x0d, r24	; 13
}
	SET_BIT(SPCR,SPE);
 376:	8d b1       	in	r24, 0x0d	; 13
 378:	80 64       	ori	r24, 0x40	; 64
 37a:	8d b9       	out	0x0d, r24	; 13
}
 37c:	cf 91       	pop	r28
 37e:	08 95       	ret

00000380 <_exit>:
 380:	f8 94       	cli

00000382 <__stop_program>:
 382:	ff cf       	rjmp	.-2      	; 0x382 <__stop_program>
